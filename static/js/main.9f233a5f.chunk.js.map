{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAddMovie","useState","query","setQuery","setMovie","movieNotFound","setMovieNotFound","inputClasses","classNames","input","onFindMovie","a","fetch","json","response","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","App","state","data","addMovie","newMovie","some","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f233a5f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n// import movies from '../../api/movies.json';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState('');\n  const [movieNotFound, setMovieNotFound] = useState(false);\n\n  const inputClasses = classNames({\n    input: true,\n    'is-danger': !query && movieNotFound,\n  });\n\n  const onFindMovie = async() => {\n    setMovie('');\n    const response = await (\n      await fetch(`http://www.omdbapi.com/?apikey=2a880529&t=${query}`)\n    ).json();\n\n    if (response.Response === 'True') {\n      setMovie({\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      });\n      setMovieNotFound(false);\n    } else {\n      setMovieNotFound(true);\n    }\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={inputClasses}\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n              }}\n            />\n          </div>\n\n          {movieNotFound && !query && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                onAddMovie(movie);\n                setMovie('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie) => {\n    const { movies } = this.state;\n    const isMovieInList = movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isMovieInList && newMovie.imdbId) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, newMovie],\n      }));\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAddMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}